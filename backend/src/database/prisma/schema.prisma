// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
//   profiles Profile[]
// }

// model Profile {
//   id    Int     @id @default(autoincrement())
//   job   String?
//   userId Int? 
//   user User? @relation(fields: [userId], references: [id])
// }

model User {
  id String @id @default(uuid())
  email String @unique
  userName String @unique
  password String?
  realName String?
  address String?
  phoneNumber String?
  avatar String?
  token Token?
  setting Setting?
  post Post[]
  auctionPost AuctionPost[]
}

model Token {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId String 
  refreshToken String? 
}

model Setting{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  realName Boolean @default(false)
  address Boolean @default(false)
  phoneNumber Boolean @default(false)
}

model ProductType{
  id Int @id @default(autoincrement())
  type String @unique
}

model Post{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId String 
  productName String 
  typeId Int[]
  typeDetail String?
  quantity Int
  price String
  imageUrl String[]
  description String
  createAt DateTime @default(now())
  updateAt DateTime?
}

model AuctionPost{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId String 
  productName String 
  typeId Int[]
  typeDetail String?
  quantity Int
  firstPrice String
  imageUrl String[]
  description String
  stepPrice String
  auctionDatetime DateTime
  createAt DateTime @default(now())
  updateAt DateTime?
}